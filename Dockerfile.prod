# ============================================================================
# Multi-stage Docker build for SmartFix API Production
# ============================================================================

# ============================================================================
# Stage 1: Build Dependencies
# ============================================================================
FROM node:18-alpine AS dependencies

LABEL maintainer="SmartFix Team <team@smartfix.com>"
LABEL description="SmartFix Service Providers API - Production Build"

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production --ignore-scripts && \
    npm cache clean --force

# ============================================================================
# Stage 2: Build Application
# ============================================================================
FROM node:18-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy source code
COPY src/ ./src/

# Build the application
RUN npm run build

# ============================================================================
# Stage 3: Production Runtime
# ============================================================================
FROM node:18-alpine AS production

# Build arguments
ARG VERSION=latest
ARG BUILD_DATE
ARG VCS_REF

# Labels for metadata
LABEL org.opencontainers.image.title="SmartFix API"
LABEL org.opencontainers.image.description="SmartFix Service Providers Platform API"
LABEL org.opencontainers.image.version=$VERSION
LABEL org.opencontainers.image.created=$BUILD_DATE
LABEL org.opencontainers.image.revision=$VCS_REF
LABEL org.opencontainers.image.vendor="SmartFix"
LABEL org.opencontainers.image.source="https://github.com/abdoElHodaky/smartfixapi"

# Install security updates and runtime dependencies
RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates && \
    rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S smartfix -u 1001 -G nodejs

# Set working directory
WORKDIR /app

# Copy production dependencies from dependencies stage
COPY --from=dependencies --chown=smartfix:nodejs /app/node_modules ./node_modules

# Copy built application from builder stage
COPY --from=builder --chown=smartfix:nodejs /app/dist ./dist

# Copy package.json for runtime
COPY --chown=smartfix:nodejs package.json ./

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads && \
    chown -R smartfix:nodejs /app/logs /app/uploads

# Switch to non-root user
USER smartfix

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV LOG_LEVEL=info

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/app.js"]

# ============================================================================
# Metadata
# ============================================================================
LABEL org.opencontainers.image.documentation="https://github.com/abdoElHodaky/smartfixapi/blob/main/README.md"
LABEL org.opencontainers.image.licenses="MIT"

